.model $adff
.inputs CLK ARST D
.outputs Q

.latch D Q re CLK 0

.end

.model $adff1
.inputs CLK ARST D
.outputs Q

.latch D Q re CLK 1

.end

.model $logic_not
.inputs A
.outputs Y

.names A Y
0 1
.end


.model DFFRE
.inputs R D E C
.outputs Q

.subckt $adff ARST=R CLK=C D=MO Q=Q_reg
.subckt $mux A=Q_reg B=D S=E Y=MO
.names Q_reg Q
1 1

.end

.model DFFRE1
.inputs R D E C
.outputs Q

.subckt $adff1 ARST=R CLK=C D=MO Q=Q_reg
.subckt $mux A=Q_reg B=D S=E Y=MO
.names Q_reg Q
1 1

.end

.model $adffe
.inputs CLK ARST EN D
.outputs Q

.subckt $adff ARST=ARST CLK=CLK D=MO Q=Q_reg
.subckt $mux A=Q_reg B=D S=EN Y=MO
.names Q_reg Q
1 1

.end

.model $mux
.inputs A B S
.outputs Y

.names S A B Y
010 1
011 1
101 1
111 1
.end


.model $not
.inputs A
.outputs Y

.names A Y
0 1
.end

.model $or
.inputs A B
.outputs Y
.names B A Y
01 1
10 1
11 1
.end

.model $and
.inputs A B
.outputs Y
.names B A Y
11 1
.end

.model $xor
.inputs A B
.outputs Y
.names B A Y
01 1
10 1
.end

.model $dff
.inputs CLK D
.outputs Q

.subckt $adff CLK=CLK D=D ASRT=$false Q=Q 
.end


.model $shr
.inputs A[0] A[1] B[0] B[1]
.outputs Y[0] Y[1]
.names $false
.names $true
1
.end


## ================== FAKE =====================

.model $add
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names B[0] A[0] Y[0]
01 1
10 1
.names B[-1] A[-1] B[0] A[0] Y[-1]
0011 1
0100 1
0101 1
0110 1
1000 1
1001 1
1010 1
1111 1
.end


.model $eq
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names B[-1] A[-1] B[0] A[0] Y[0]
0000 1
0011 1
1100 1
1111 1
.names $false Y[-1]
1 1
.end

.model $ge
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names B[0] A[0] A[-1] B[-1] Y[0]
0000 1
0010 1
0011 1
0100 1
0110 1
0111 1 
1010 1
1100 1
1110 1 
1111 1 
.names $false Y[-1]
1 1
.end


.model $gt
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names A[0] B[0] B[-1] A[-1] Y[0]
0001 1
0101 1
1000 1
1001 1
1011 1
1101 1
.names $false Y[-1]
1 1
.end


.model $le
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names A[0] B[0] B[-1] A[-1] Y[0]
0000 1
0010 1
0011 1
0100 1
0110 1
0111 1
1010 1
1100 1
1110 1
1111 1
.names $false Y[-1]
1 1
.end


.model $lt
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names B[0] A[0] A[-1] B[-1] Y[0]
0001 1
0101 1
1000 1
1001 1
1011 1
1101 1
.names $false Y[-1]
1 1
.end


.model $sub
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names B[-1] A[-1] B[0] A[0] Y[-1]
0010 1
0100 1
0101 1
0111 1
1000 1
1001 1
1011 1
1110 1
.names B[0] A[0] Y[0]
01 1
10 1
.end



.model $logic_and
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names B[-1] B[0] A[-1] A[0] Y[0]
0101 1
0110 1
0111 1
1001 1
1010 1
1011 1
1101 1
1110 1
1111 1
.names $false Y[-1]
1 1
.end



.model $logic_or
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef 
.names B[-1] B[0] A[-1] A[0] Y[0]
0001 1
0010 1
0011 1
0100 1
0101 1
0110 1
0111 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.names $false Y[-1]
1 1
.end


.model $reduce_or
.inputs A[0] A[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names A[-1] A[0] Y[0]
01 1
10 1
11 1
.names $false Y[-1]
1 1
.end

.model $ne
.inputs A[0] A[-1] B[0] B[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names B[-1] A[-1] B[0] A[0] Y[0]
0001 1
0010 1
0100 1
0101 1
0110 1
0111 1
1000 1
1001 1
1010 1
1011 1
1101 1
1110 1
.names $false Y[-1]
1 1
.end


.model $reduce_and
.inputs A[0] A[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names A[-1] A[0] Y[0]
11 1 
.names $false Y[-1]
1 1
.end


.model $reduce_xor
.inputs A[0] A[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names A[-1] A[0] Y[0]
01 1
10 1
.names $false Y[-1]
1 1
.end


.model $reduce_bool
.inputs A[0] A[-1]
.outputs Y[0] Y[-1]
.names $false
.names $true
1
.names $undef
.names A[-1] A[0] Y[0]
01 1
10 1
11 1
.names $false Y[-1]
1 1
.end

